<br>
<div class="contentcontainer">
  <%= link_to 'New Venue', new_venue_path %>
  <div class ="row">
    <div class='col-md-3'>
      <div class="row searchbox">
        <%= render 'search' %>  
      </div>
      <div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title"><%= @search_presentation_string %></h3>
          </div>
          <div class="panel-heading">
            <%= link_to 'Download Local Venues', venues_path(params.merge({format: "json"})), class: "btn btn-warning" %>
          </div>
          <div class="panel-body">
            <div class="row">
              <%= paginate @venues %>  
            </div>
            <div class="resultcontainer">
                  <%= render 'venues' , venues: @venues %>
                </div>
          </div>
      </div>
    </div>
    <div class="col-md-9"><div class ='gmap'>
        <div id='gmapuniq'></div>
    </div>
    </div>
  </div>  
</div>

<script>
$(document).ready(function(){
  // var geocoder;
  handler = Gmaps.build('Google');
  geocoder = new google.maps.Geocoder();
  handler.buildMap({ provider: {}, internal: {id: 'gmapuniq'}}, function(){
  markers = handler.addMarkers(<%= raw @hash.to_json %>);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
  console.log("something");
});


});
  // function codeAddress(){
  //   var geocoder
  //   geocoder = new google.maps.Geocoder();
  //   var address = document.getElementById('location-input').value;
  //   geocoder.geocode({'address': address}, function(results,status){
  //     if (status == google.maps.GeoCoderStatus.OK){
  //       handler.setCenter(results[0].geometry.location);
  //     } else {
  //       alert('geocode was not successful for the following reason'+ status)
  //     }

  //   });

  // };

  function centerMap(longitude, latitude, handler){ 
    // handler.panTo({lat: 22, lng: 32});
    console.log(longitude);
    console.log(latitude);


    handler.map.centerOn(new google.maps.LatLng(latitude, longitude));
    console.log("calling the centermap function");
    handler.buildMap({ provider: {zoom: 16}, internal: {id: 'gmapuniq'}}, function(){
       markers = handler.addMarkers(<%= raw @hash.to_json %>);
       handler.map.centerOn(new google.maps.LatLng(latitude, longitude));
    });

  }

  function codeAddress() {
    // var geocoder
    // geocoder = new google.maps.Geocoder();
    console.log(handler);
    // handler = Gmaps.build('Google');
    var address = document.getElementById('location-input').value;
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        console.log(results);
        handler.getMap().setCenter(results[0].geometry.location);
        // var marker = new google.maps.Marker({
        //     map: handler.getMap(),
        //     position: results[0].geometry.location
        // });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }

  function autoComplete(){
    var query = document.getElementById('location-input').value;
    geocoder.geocode({'address': query}, function(results, status){
      if (status == google.maps.GeocoderStatus.OK){
        choices = [];
        for (var i = results.length - 1; i >= 0; i--) {
          choices.push(results[i].formatted_address);
        };
        console.log(choices);
        trial = ["one","two","three"];
        console.log(trial);
        // completebox = document.getElementById("location-input");
        completebox = $('#location-input');
        // completebox.autocomplete("enable");
        completebox.autocomplete({source: choices});
        console.log('choices');      
        // completebox.autocomplete({source: trial});
      }
    })

  }

</script>
<!-- <h2><%= @hash %></h2> -->

